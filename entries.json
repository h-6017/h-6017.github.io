{
	"entries":[
		{
		"date":"04/13/2015",
		"title":"Command Line Fu",
		"text":"As a new arrival on the techscape today has abeen a whirlwind of acronyms, ideas, and keystrokes. The most fascinating thing to me as a new user is the command line. With a few well chosen commands and some usefull help pages I was able to begin to unveil the frighteningly massive amount of information behind the shiny buttons and helpful tooltips in the GUI. I am finding that the ability to find what I want and then interact directly with the machine to accomplish my task is incredibly helpful in the learning process. Many (ok, almost all) of the things I saw today don'tmake complete sense, but the concepts don't seem as vague, and I see now that I can unlock the mystery with some hard work. For now, if only this worked. ~/sudo apt-get install all_the_answers -Brandon"
		},
		{
		"date":"04/14/2015",
		"title":"Booleans, Binary and bash",
		"text":"Today was much more of a nuts and bolts type of day which I like, but it does cause more brain pain. Working with if statements seems simple enough on the chalk board, but the execution is quite elusive. Learned quite a bit about lists, indexing and removing items from them, calling specific peices of them, and even storing dynamic variables in them. Work on creating the dice game has caused me to realized truly how little knowledge I posess, yet succeeding in the creation of a digital 6 sided dice gave me way more joy than I feel it should have. I'm surprised tolearn I retained much of the information I learned yesterday, and dealing with the git bash terminal came much more easily to me. I still have some problems with my file structure and getting the proper repositories in the right spots, but I feel confident that given a week or two the clouds will start to break and I may be able to enjoy some lucidity when it comes to these concepts. -Brandon Brown -SudoPriest Acolyte"
		},
        {
		"date":"04/15/2015",
		"title":"My life is a lie, code is truth.",
		"text":"The computer only does what you tell it to do. Sounds easy, but what happens when you have no idea what you told the damned thing to do. Or what if you told it to do something and it does something else. What do you change? What do you keep? Today was an exercise in print commands. I have decided that, for now, there can never be toomany print statements. Yes, it is cumbersome. Yes, #'s become very important. But I found that my understanding of what I was doing grew exponentially the more I painstakingly forced my code to tell me exactly what it was doing, and to write out the answers that it was recieving. I don't feel more confident in my ability to understand what I'm doingthan I did yesterday. But I begin to see that I WILL understand it with more exposure. -Brandon Brown  :wq"
		}
	]
}
